<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="utf-8">
    <meta name="theme-color" content="#ff6600" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
    <link rel='stylesheet' href='/stylesheets/style.css'>
    <link rel="stylesheet" href="/stylesheets/header.css">
    <link rel="stylesheet" href="/stylesheets/main.css">
    <link rel="stylesheet" href="/stylesheets/card.css">
    <title>Gabriel Alves</title>
  </head>
  <body>
  	<header class="header">
	    <h1>Gabriel Alves</h1>
    </header>
    <main class="main">
      <div class="card">
        <div class="card-title">
          <h1 class="title">Começando com AngularJS</h1>
          <h2 class="date">(05/05/2018)</h2>
          <!--This should be removed-->
          <div class="clear"></div>
        </div>
        <div class="card-body">
          <p>
            Recentemente ficou disponível para a comunidade, a versão 6 do Angular, cheia de nóvidades, correções de erros e melhorias de segurança. Mesmo com o lançamento da versão 6, muitas pessoas ainda usam o Angular "antigo" que atualmente se encontra na versão 1.6.x, muitas empresas ainda tem projetos em produção com esse framework, e muita gente ainda prefere desenvolver SPA's (Single Page Applications) usando essa versão do framework. Vamos desenvolver um programa simples para entender o funcionamento do AngularJS, a versão que estou usando nesse momento é a 1.6.9, porém o que será feito aqui pode ser feito com qualquer versão. 
          </p>
          <p>
            Faça o download do AngularJS <a href="https://angularjs.org/">na página oficial</a>. Vamos começar!
          </p>
          <p>
            Primeiro, crie uma pasta no local que for mais comodo para você, nela crie um arquivo "index.html", e o abra para edição com seu editor de textos favorito. Crie a estrutura do documento HTML:
          </p>
          <p>
            html
            head
            body            
          </p>
          <p>
            Importe a biblioteca do AngularJS baixada anteriormente, e adicione mais uma tag script no documento para que possamos começar a brincar com angular: 
          </p>          
          <p>
            Antes de qualquer coisa precisamos criar um módulo angular, onde toda a regra de negócio da aplicação e demais módulos residirão, façamos isso na tag script:
          </p>
          <p>
            O trecho "angular.module('nomeDoModulo', [])" inicia o módulo, dando-lhe um nome, como dito anteriormente cada módulo angular pode ter outros módulos internos, que são acrescentados ao projeto naquele "array" representado pelos "[]". Agora que o módulo criado precisamos informar o trecho da página que é controlado por ele, afinal de contas a ideia do angular e de bibliotecas afim é permitir a troca dinâmica de conteúdo sem a necessidade de recarregamento da página, tudo ocorre por baixo dos panos. Para informar qual o modulo que irá controlar a nossa página, basta acrescentar o seguinte código na tag html -> ng-app="nomeDoModulo" e pronto, o angular já está linkado a página.
          </p>          
          <p>
            Agora vamos as funcionalidades, adicione um input a página -> input type="text" ng-model="nome", e logo abaixo um parágrafo p {{nome}} p, o que fizemos aqui foi ligar o input ao parágrafo, ou seja tudo o que for escrito no input será imediatamente escrito na tag p, porém para que isso aconteça de fato, precisamos que um "controller" faça a ponte entre as duas tags, um controller é responsável por guardar a lógica das partes da aplicação, no nosso caso vamos disponibilizar a variável "nome" para a página, basta voltar ao nosso módulo e acrescentar o seguinte código que instância um controller -> angular.module("nomeDoModulo", []).controller('meuController', function($scope) {
              $scope.nome = "";
            });          
          </p> 
          <p>
            Aqui temos algumas coisas novas, primeiro com .controller("nomeDoController", function() {}) criamos o controller e damos a ele um nome, o código que ele irá executar ficará dentro daquela function, e se você prestou atenção, na função que acrescentamos ao nosso módulo informamos um parâmetro, no caso "$scope" ele é responsável por disponibilizar a variável nome para a página, por isso que no corpo da função ela possuí o trecho "$scope.nome", estamos adicionando ao escopo da página a variável nome, agora resta apenas adicionar o controller a página como fizemos com o módulo, basta escolher onde na página o controller será inserido, e na tag escolhida acrescentar ng-controller="nomeDoController", no nosso caso vamos adicionar na tag body: body ng-controller
          </p>         
          <p>Abra a página no seu navegador, digite seu nome no imput, e veja o resultado!</p>
        </div>
      </div>
    </main>
  </body>
</html>
